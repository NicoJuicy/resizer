name: Build project

# lOOK INTO ADDING RELEASE DRAFTER action
on:
  push:
    branches:
      - main
      - develop
      - v5
  pull_request:
    branches:
      - main
      - develop
      - v5
  release:
    types: [ published ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - uses: nowsprinting/check-version-format-action@v3
        id: version
        with:
          prefix: 'v'

      - name: Set the release version (if applicable)
        run: |
          echo "TAGGED_VERSION=${{ steps.version.outputs.full_without_prefix }}" >> $GITHUB_ENV
          echo Set version to ${{ steps.version.outputs.full_without_prefix }}
        shell: bash
        if: steps.version.outputs.is_valid == 'true' && github.event_name == 'release'

      - name: Build Solution
        run:  dotnet build -c Release ImageResizer.sln
      
      - name: Test Solution (except azure)
        run: dotnet test  -c Release  --filter "FullyQualifiedName!~Azure" ImageResizer.sln

      - name: Pack
        run: dotnet pack ImageResizer.sln -c Release --include-source
      
      - name: Add Azure & Myget Nuget feed
        run: |
          dotnet nuget add source --name azureimazen "https://pkgs.dev.azure.com/imazenio/_packaging/imazenio/nuget/v3/index.json"
          dotnet nuget add source --name mygetimazen "https://www.myget.org/F/imazen-nightlies/api/v2/package" 
# dotnet nuget add source --name mygetresizerelite "https://www.myget.org/F/imageresizer-agpl-or-elite-license/api/v2/package" 


# NOT pushing to myget AGPL feed, that's deprecated
# NOT uploading stuff to S3 buckets
# NOT uploading .zip to github... yet

      - name: Publish nuget packages to MyGet if a prerelease
        if: steps.version.outputs.is_valid == 'true' && github.event_name == 'release' && steps.version.outputs.is_stable != 'true'
        run: |
          dotnet nuget push bin\Release\*.nupkg --skip-duplicate --api-key ${{ secrets.MYGET_KEY }}  --source "mygetimazen"

#
#      - name: Publish nuget packages to Azure if a prerelease
#        if: steps.version.outputs.is_valid == 'true' && github.event_name == 'release' && steps.version.outputs.is_stable != 'true'
#        run: |
#          dotnet nuget push bin/Release/*.nupkg --skip-duplicate --api-key ${{ secrets.AZURE_NUGET_KEY }}  --source "azureimazen"
#          
      - name: Publish nuget packages to Nuget.org if a stable release
        if: steps.version.outputs.is_valid == 'true' && github.event_name == 'release' && steps.version.outputs.is_stable == 'true'
        run: |
          dotnet nuget push bin\Release\*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} 
