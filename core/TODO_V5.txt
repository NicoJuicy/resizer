
## Todo for V5

* Etags
* CropAround
* Switch between builders depending on querystring keys used in the url.

* HybridCache disposal
* Optimize file serving with and without cache.
* Good default etags and cache control headers.
* Improve migration tips in CHANGES>md
* Create watermark system with web.config support
* Update /resizer.debug to guide removal of old plugins and migration to new
* Figure out IResponseArgs support in async context
* Unify storage providers and add support for proxying static non-image files 
* add a unified API for configuring both IDNS and IR. And a unified async blob provider api with support for arbitrary files, relay, source caching, etc.
* Add support for caching source blobs under certain circumstances
* Auto-select builder based on unsupported command keys (and maybe watermarks)
* Address weakness in letting cache=no and process=no happen from querystring; 
* Add fatal error if HybridCache folder is inside the web root.






Figure out why imageflow.dll ends up in project roots sometimes?

TODO: expose jpeg.progressive in Instructions class- Supported by Imageflow, but not GDI, WIC, or WPF
TODO: maybe implement `dpi` - This feature is only useful if the user downloads the image before printing it. Lots of confusion around DPI, need to find a way to make it obvious. Perhaps naming it PrintDPI?
 


V5 C# API:

REVISIT: private readonly string[] _supportedFileExtensions = new string[]
            { "bmp", "gif", "exif", "png", "tif", "tiff", "tff", "jpg", "jpeg", "jpe", "jif", "jfif", "jfi" };

Consider dependent libraries: https://libraries.io/nuget/ImageResizer/dependents

## LATER

* Make v4 packages not permit v5 ImageResizer.dll?
* Create migration guide
* Make old CommitAttribute crash with informative message that V4 plugins need to be removed.
* Obsolete ResizeSettings members that Imageflow doesn't support
* Figure out AWS credential delay
* Figure out graceful shutdown for HybridCache (Dispose on httpmodule?)
* Integrate licensing from Imazen.Common and migrate just the enforcer tests. Add Edition metadata or API call during new()
* And maybe GUID for COM? Check V4 API texts for old values [assembly: System.Runtime.InteropServices.Guid("8edaeb47-7067-4c77-aa1b-ffbeeab5e81d")]
* Document cache control

Imageflow needs to be able to shrink watermarks to pixel widths/heights?

Add source file caching support in HybridCache. And perhaps mem caching.

Figure out &cache=no dilemma.

Vary the cache key by the set of builders installed.

Add WIC support in Imageflow
https://docs.rs/native-windows-gui/1.0.1/native_windows_gui/struct.ImageDecoder.html


Fix possible regression on these
1. Commands "ignoreicc" and "anchor" should not trigger processing alone. Autorotate should, as that has been legacy behavior.

2. Core:  "scale", "stretch", "cropxunits", "cropyunits","mode" should not trigger image processing, as they are only modifier commands, and do nothing if used alone.




IN V6:

* Add direct support for Imazen.Common.Storage.IBlobProvider, unify provider APIs
* Fix response headers system under async
* Unify RemoteReader and encrypted/signed URL system.
* Unify SizeLimiting and JobSecurity 

## Nuget.Org manual package updates

Help with Forte.ImageResizer.AzureBlobCache
Help with ImageResizer.Plugins.PdfiumRenderer.Pdfium.Dll
Help with ImageResizer.Plugins.PngOptimizer 
Help with ImageResizer.Plugins.GradientOverlay
Help with ImageResizer.Plugins.ScalePercentage since it duplicates zoom feature
Help with TNX.ImageResizer
Help with ImageResizer.Plugins.Tint
Help with ImageResizer.Plugins.AzureReader3
Help with ImageResizer.Plugins.AzureBlobStorageCache